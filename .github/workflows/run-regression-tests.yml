# Based off the starter workflow for a CMake project running on a single platform. Runs regression tests for the latest commit compared to the previous commit.
# For more info on test parameter sets see: https://acernorth.github.io/GeneralMetapop/user_guide/param_sets.html 
name: Run regression tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{ github.workspace }}/build --config ${{ env.BUILD_TYPE }}

    - name: CMake Test
      working-directory: ${{ github.workspace }}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{ env.BUILD_TYPE }}

    - name: Save cache 
      id: cache-gdsimsapp-save
      uses: actions/cache/save@v4
      with:
        path: ${{ github.workspace }}/build
        key: ${{ runner.os }}-gdsimsapp-${{ hashFiles('**/src/*', '**/includes/*') }}

  test:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        boundary-type: ["toroid", "edge"]
        dispersal-type: ["distance_kernel", "radial"]
        param-set: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18"]

    steps:
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
          python -m pip install --upgrade pip
          python -m pip install numpy 
          python -m pip install pytest
          python -m pip install pytest --upgrade

    - name: Restore cached gdsimsapp
      id: cache-gdsimsapp-restore
      uses: actions/cache/restore@v4
      with:
        path: |
          ${{ github.workspace }}/build
        key: ${{ runner.os }}-gdsimsapp-${{ hashFiles('**/src/*', '**/includes/*') }}

    - name: Regression test
      working-directory: ${{ github.workspace }}/build
      run: |
          py.test ../test/test_gdsimsapp.py --set_label=${{ matrix.param-set }} --boundary_type=${{ matrix.boundary-type }} --dispersal_type=${{ matrix.dispersal-type }}

    - name: Produce artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.boundary-type }}_${{ matrix.dispersal-type }}_set${{ matrix.param_set }} 
        path: ${{ github.workspace }}/build/output_files/*${{ matrix.param_set }}run*.txt



    

